name: Systemd VM Test Environment
on: [push, pull_request]

jobs:
  test-systemd-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install LXD
        run: |
          sudo snap install lxd
          sudo lxd init --auto

      - name: Launch systemd container
        run: |
          # Launch Ubuntu container with systemd
          sudo lxc launch ubuntu:22.04 systemd-test

          # Wait for container to be ready
          sudo lxc exec systemd-test -- cloud-init status --wait

          # Install SSH server
          sudo lxc exec systemd-test -- bash -c "
            apt update &&
            apt install -y openssh-server sudo curl wget
          "

          # Create test user
          sudo lxc exec systemd-test -- bash -c "
            useradd -m -s /bin/bash testuser &&
            echo 'testuser:password123' | chpasswd &&
            usermod -aG sudo testuser
          "

          # Configure SSH with key-based authentication
          sudo lxc exec systemd-test -- bash -c "
            mkdir -p /home/testuser/.ssh &&
            chown -R testuser:testuser /home/testuser/.ssh &&
            chmod 700 /home/testuser/.ssh
          "

          echo "${{ secrets.SSH_PUBLIC_KEY }}" | sudo lxc exec systemd-test -- bash -c "cat > /home/testuser/.ssh/authorized_keys"
          sudo lxc exec systemd-test -- bash -c "chmod 600 /home/testuser/.ssh/authorized_keys"
          echo "SSH key configured from secrets"

          # Start SSH service
          sudo lxc exec systemd-test -- systemctl start ssh
          sudo lxc exec systemd-test -- systemctl enable ssh

      - name: Get container IP
        id: get-ip
        run: |
          CONTAINER_IP=$(sudo lxc list systemd-test --format csv --columns 4 | tail -1)
          echo "container_ip=$CONTAINER_IP" >> $GITHUB_OUTPUT
          echo "Container IP: $CONTAINER_IP"

      - name: Test SSH connection
        run: |
          # Wait a moment for SSH to be ready
          sleep 10

          # Use SSH key authentication
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/ssh_key
          chmod 600 /tmp/ssh_key
          ssh -i /tmp/ssh_key -o StrictHostKeyChecking=no testuser@${{ steps.get-ip.outputs.container_ip }} 'echo "SSH connection successful (key-based)"'
          rm -f /tmp/ssh_key

      - name: Run deployment tests
        run: |
          # Use SSH key authentication
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/ssh_key
          chmod 600 /tmp/ssh_key
          ssh -i /tmp/ssh_key -o StrictHostKeyChecking=no testuser@${{ steps.get-ip.outputs.container_ip }} '
            echo "Running deployment tests..." &&
            systemctl status &&
            whoami &&
            pwd &&
            echo "Deployment environment ready!"
          '
          rm -f /tmp/ssh_key

      - name: Cleanup
        if: always()
        run: |
          sudo lxc stop systemd-test || true
          sudo lxc delete systemd-test || true
